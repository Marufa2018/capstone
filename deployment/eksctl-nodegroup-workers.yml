{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking: false) [created and managed by eksctl]",
  "Mappings": {
    "ServicePrincipalPartitionMap": {
      "aws": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-cn": {
        "EC2": "ec2.amazonaws.com.cn",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-us-gov": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      }
    }
  },
  "Resources": {
    "EgressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group workers (kubelet and workload TCP ports)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 1025,
        "GroupId": {
          "Fn::ImportValue": "eksctl-pod-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 65535
      }
    },
    "EgressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group workers (workloads using HTTPS port, commonly used with extension API servers)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-pod-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 443
      }
    },
    "IngressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group workers to communicate with control plane (kubelet and workload TCP ports)",
        "FromPort": 1025,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-pod-cluster::SecurityGroup"
        },
        "ToPort": 65535
      }
    },
    "IngressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group workers to communicate with control plane (workloads using HTTPS port, commonly used with extension API servers)",
        "FromPort": 443,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-pod-cluster::SecurityGroup"
        },
        "ToPort": 443
      }
    },
    "IngressInterClusterCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow control plane to receive API requests from worker nodes in group workers",
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-pod-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "SG"
        },
        "ToPort": 443
      }
    },
    "NodeGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": "3",
        "LaunchTemplate": {
          "LaunchTemplateName": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "Version": {
            "Fn::GetAtt": [
              "NodeGroupLaunchTemplate",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "4",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": "true",
            "Value": "pod-workers-Node"
          },
          {
            "Key": "kubernetes.io/cluster/pod",
            "PropagateAtLaunch": "true",
            "Value": "owned"
          }
        ],
        "VPCZoneIdentifier": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "eksctl-pod-cluster::SubnetsPublic"
            }
          ]
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": "0"
        }
      }
    },
    "NodeGroupLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "Encrypted": false,
                "VolumeSize": 80,
                "VolumeType": "gp2"
              }
            }
          ],
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "NodeInstanceProfile",
                "Arn"
              ]
            }
          },
          "ImageId": "ami-077e2a60357cb396f",
          "InstanceType": "t2.micro",
          "MetadataOptions": {
            "HttpPutResponseHopLimit": 2,
            "HttpTokens": "optional"
          },
          "NetworkInterfaces": [
            {
              "DeviceIndex": 0,
              "Groups": [
                {
                  "Fn::ImportValue": "eksctl-pod-cluster::SharedNodeSecurityGroup"
                },
                {
                  "Ref": "SG"
                }
              ]
            }
          ],
          "UserData": "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"
        },
        "LaunchTemplateName": {
          "Fn::Sub": "${AWS::StackName}"
        }
      }
    },
    "NodeInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NodeInstanceRole"
          }
        ]
      }
    },
    "NodeInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::FindInMap": [
                      "ServicePrincipalPartitionMap",
                      {
                        "Ref": "AWS::Partition"
                      },
                      "EC2"
                    ]
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
          }
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/NodeInstanceRole"
            }
          }
        ]
      }
    },
    "SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Communication between the control plane and worker nodes in group workers",
        "Tags": [
          {
            "Key": "kubernetes.io/cluster/pod",
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/SG"
            }
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "eksctl-pod-cluster::VPC"
        }
      }
    }
  },
  "Outputs": {
    "FeatureLocalSecurityGroup": {
      "Value": true
    },
    "FeaturePrivateNetworking": {
      "Value": false
    },
    "FeatureSharedSecurityGroup": {
      "Value": true
    },
    "InstanceProfileARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceProfileARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceProfile",
          "Arn"
        ]
      }
    },
    "InstanceRoleARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceRoleARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceRole",
          "Arn"
        ]
      }
    }
  }
}